<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>第一篇博客</title>
      <link href="/2022/05/28/di-yi-pian-bo-ke/"/>
      <url>/2022/05/28/di-yi-pian-bo-ke/</url>
      
        <content type="html"><![CDATA[<h1 id="博客功能测试"><a href="#博客功能测试" class="headerlink" title="博客功能测试"></a>博客功能测试</h1><h2 id="代码高亮测试"><a href="#代码高亮测试" class="headerlink" title="代码高亮测试"></a>代码高亮测试</h2><ol><li>C++ 代码：</li></ol><pre class="line-numbers language-cpp"><code class="language-cpp"><span class="token keyword">template</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token class-name">TFactory</span><span class="token operator">></span><span class="token keyword">auto</span> <span class="token function">REQUIRES</span><span class="token punctuation">(</span>m_mutex<span class="token punctuation">)</span> <span class="token function">getFactory</span><span class="token punctuation">(</span><span class="token keyword">const</span> std<span class="token operator">::</span>string<span class="token operator">&amp;</span> id<span class="token punctuation">)</span> <span class="token keyword">const</span> <span class="token operator">-</span><span class="token operator">></span>    <span class="token keyword">typename</span> FactoryDetails<span class="token operator">::</span>get_interface_const_ref<span class="token operator">&lt;</span>TFactory<span class="token operator">></span><span class="token operator">::</span>type<span class="token punctuation">{</span>    tComponentContItr componentPtr <span class="token operator">=</span> findComponentFactory<span class="token operator">&lt;</span>TFactory<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>componentPtr <span class="token operator">!=</span> m_componentCont<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">auto</span> factory <span class="token operator">=</span> componentPtr<span class="token operator">-</span><span class="token operator">></span>second<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>factory <span class="token operator">!=</span> componentPtr<span class="token operator">-</span><span class="token operator">></span>second<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token keyword">using</span> tInterface <span class="token operator">=</span>                <span class="token keyword">typename</span> FactoryDetails<span class="token operator">::</span>get_interface<span class="token operator">&lt;</span>TFactory<span class="token operator">></span><span class="token operator">::</span>type<span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token operator">*</span><span class="token keyword">static_cast</span><span class="token operator">&lt;</span>tInterface<span class="token operator">*</span><span class="token operator">></span><span class="token punctuation">(</span>factory<span class="token operator">-</span><span class="token operator">></span>second<span class="token operator">-</span><span class="token operator">></span><span class="token function">getPtr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">throw</span> <span class="token function">FactoryNotRegisteredEx</span><span class="token punctuation">(</span><span class="token keyword">typeid</span><span class="token punctuation">(</span>TFactory<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li>Rust 代码：</li></ol><pre class="line-numbers language-rust"><code class="language-rust"><span class="token keyword">impl</span><span class="token operator">&lt;</span>T<span class="token operator">></span> Cacher<span class="token operator">&lt;</span>T<span class="token operator">></span><span class="token keyword">where</span>    T<span class="token punctuation">:</span> <span class="token function">Fn</span><span class="token punctuation">(</span>u32<span class="token punctuation">)</span> <span class="token punctuation">-></span> u32<span class="token punctuation">,</span><span class="token punctuation">{</span>    <span class="token keyword">fn</span> <span class="token function">new</span><span class="token punctuation">(</span>calculation<span class="token punctuation">:</span> T<span class="token punctuation">)</span> <span class="token punctuation">-></span> Cacher<span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token punctuation">{</span>        Cacher <span class="token punctuation">{</span>            calculation<span class="token punctuation">,</span>            value<span class="token punctuation">:</span> None<span class="token punctuation">,</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">fn</span> <span class="token function">value</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token keyword">self</span><span class="token punctuation">,</span> arg<span class="token punctuation">:</span> u32<span class="token punctuation">)</span> <span class="token punctuation">-></span> u32 <span class="token punctuation">{</span>        <span class="token keyword">match</span> <span class="token keyword">self</span><span class="token punctuation">.</span>value <span class="token punctuation">{</span>            <span class="token function">Some</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> v<span class="token punctuation">,</span>            None <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>                <span class="token keyword">let</span> v <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">self</span><span class="token punctuation">.</span>calculation<span class="token punctuation">)</span><span class="token punctuation">(</span>arg<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">self</span><span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token function">Some</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">;</span>                v            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> simulated_user_specified_value <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> simulated_random_number <span class="token operator">=</span> <span class="token number">7</span><span class="token punctuation">;</span>    <span class="token function">generate_workout</span><span class="token punctuation">(</span>simulated_user_specified_value<span class="token punctuation">,</span> simulated_random_number<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">fn</span> <span class="token function">generate_workout</span><span class="token punctuation">(</span>intensity<span class="token punctuation">:</span> u32<span class="token punctuation">,</span> random_number<span class="token punctuation">:</span> u32<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 博客建设 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客功能 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
